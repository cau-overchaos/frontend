@import "../../../variable.scss";

.ide {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding: 10px;
  gap: 10px;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  & > * {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    gap: 10px;
    &.hasCode {
      flex: 10000;
      flex-basis: 0px;
    }
    &.hasIo {
      flex: 1;
      flex-basis: 400px;
      flex-direction: column;
      display: flex;
      width: fit-content;
      & > * {
        flex: 1;
        max-height: calc(100vh - var(--navbar-height) - 220px);
        overflow-y: scroll;
        overflow-x: scroll;
      }
    }
  }
  .menu {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    flex-wrap: wrap;
    & > * {
      min-width: fit-content;
    }
    .saveBtn {
      flex: 1;
    }
  }

  .code {
    border: $primary_theme_color 8px solid;
    border-radius: 15px;
    flex: 1;
    .textarea {
      height: 100%;
      min-width: 500px;
      min-height: 100%;
    }
  }

  .input,
  .output {
    border: $primary_theme_color 8px solid;
    border-radius: 15px;
    word-break: break-all;
    flex-basis: 0px;
    flex: 1;
    h1 {
      margin: 10px;
      font-size: 1.25em;
      line-height: 1.25em;
    }

    textarea,
    .outputContainer,
    .loading {
      width: 100%;
      height: calc(100% - 1.25em - 20px);
      &.loading {
        display: flex;
        justify-content: center;
        align-items: center;
        & > * {
          height: 3em;
        }
      }
      &.outputContainer {
        padding: 0.6em;
        box-sizing: border-box;
        white-space: pre-wrap;

        .errorOutput,
        .infoOutput {
          font-size: 0.8em;
          &.errorOutput {
            color: darkred;
          }
          &.infoOutput {
            color: gray;
          }
        }
      }
    }
  }
}
